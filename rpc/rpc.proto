syntax = "proto3";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

option go_package = "../rpc";
option optimize_for = CODE_SIZE;

enum Order {
  ORDER_UNSPECIFIED = 0;
  DESC = 1;
  ASC = 2;
}

message Sort {
  string field = 1;
  Order order = 2;
}

message PagePagination {
  int32 page = 1;
  int32 per_page = 2;
}

message PagePaginationResult {
  int32 page = 1;
  int32 per_page = 2;
  int32 total_pages = 3;
  int64 total_items = 4;
  int64 seen_items = 5;
  int32 previous_page = 6;
  int32 next_page = 7;
}

message Session {
  int64 id = 1;
  string user_agent = 2;
  string ip = 3;
  string last_ip = 4;
  google.protobuf.Timestamp last_used_at_time = 5;
  google.protobuf.Timestamp created_at_time = 6;
  bool active = 7;
  bool current = 8;
}

message MyGroup {
  int64 id = 1;
  string name = 2;
  string description = 3;
  google.protobuf.Timestamp joined_at_time = 4;
}

// ---------- HelloWorld

service HelloWorld {
  rpc Hello(HelloReq) returns (HelloResp);
}

message HelloReq {
  string subject = 1;
  google.protobuf.Timestamp current_time = 2;
}

message HelloResp {
  string text = 1;
  google.protobuf.Timestamp current_time = 2;
}

// ---------- Auth

service Auth {
  rpc SignUp(SignUpReq) returns (SignUpResp);
  rpc ForgotPassword(ForgotPasswordReq) returns (ForgotPasswordResp);
}

message SignUpReq {
  string email = 1;
  string username = 2;
  string password = 3;
}

message SignUpResp {}

message ForgotPasswordReq {
  string email = 1;
}

message ForgotPasswordResp {}

// ---------- Page

service Page {
  rpc GetHomePage(google.protobuf.Empty) returns (GetHomePageResp);
  rpc GetProfilePage(google.protobuf.Empty) returns (GetProfilePageResp);
}

message GetHomePageResp {
  int64 device_count = 1;
}

message GetProfilePageResp {
  string username = 1;
  string email = 2;
  bool admin = 3;
  google.protobuf.Timestamp created_at_time = 4;
  google.protobuf.Timestamp updated_at_time = 5;
  repeated Session sessions = 6;
}

// ---------- User

service User {
  rpc UpdateMyUsername(UpdateMyUsernameReq) returns (UpdateMyUsernameResp);
  rpc UpdateMyPassword(UpdateMyPasswordReq) returns (UpdateMyPasswordResp);
  rpc RevokeMySession(RevokeMySessionReq) returns (RevokeMySessionResp);
  rpc RevokeAllMySessions(RevokeAllMySessionsReq) returns (RevokeAllMySessionsResp);
  rpc ListMyGroups(ListMyGroupsReq) returns (ListMyGroupsResp);
}

message UpdateMyUsernameReq {
  string new_username = 1;
}

message UpdateMyUsernameResp {}

message UpdateMyPasswordReq {
  string old_password = 1;
  string new_password = 2;
}

message UpdateMyPasswordResp {}

message RevokeMySessionReq {
  int64 session_id = 1;
}

message RevokeMySessionResp {}

message RevokeAllMySessionsReq {}

message RevokeAllMySessionsResp {}

message ListMyGroupsReq {}

message ListMyGroupsResp {
  repeated MyGroup groups = 1;
}

// ---------- Admin

service Admin {
  rpc GetAdminGroupsPage(GetAdminGroupsPageReq) returns (GetAdminGroupsPageResp);
  rpc GetAdminGroupIDPage(GetAdminGroupIDPageReq) returns (GetAdminGroupIDPageResp);

  rpc CreateGroup(CreateGroupReq) returns (CreateGroupResp);
  rpc UpdateGroup(UpdateGroupReq) returns (google.protobuf.Empty);
  rpc DeleteGroup(DeleteGroupReq) returns (google.protobuf.Empty);
}

message GetAdminGroupsPageReq {
  PagePagination page = 1;
  Sort sort = 2;
  // repeated string filters = 3;
}

message GetAdminGroupsPageResp {
  message Group {
    int64 id = 1;
    string name = 2;
    int64 user_count = 3;
    bool disabled = 4;
    google.protobuf.Timestamp disabled_at_time = 5;
    google.protobuf.Timestamp created_at_time = 6;
  }
  repeated Group items = 1;
  PagePaginationResult pageResult = 2;
  Sort sort = 3;
}

message GetAdminGroupIDPageReq {
  int64 id = 1;
}

message GetAdminGroupIDPageResp {
  message Group {
    int64 id = 1;
    string name = 2;
    string description = 3;
    bool disabled = 4;
    google.protobuf.Timestamp disabled_at_time = 5;
    google.protobuf.Timestamp created_at_time = 6;
    google.protobuf.Timestamp updated_at_time = 7;
  }
  Group group = 1;

  message User {
    int64 id = 1;
    string name = 2;
  }
  repeated User users = 2;
}

message CreateGroupReq {
  string name = 1;
  string description = 2;
}

message CreateGroupResp {
  int64 id = 1;
}

message UpdateGroupReq {
  string name = 1;
  string description = 2;
}

message DeleteGroupReq {
  int64 id = 1;
}
