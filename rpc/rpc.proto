syntax = "proto3";

import "google/protobuf/timestamp.proto";

option go_package = "../rpc";
option optimize_for = CODE_SIZE;

message Session {
  int64 id = 1;
  string user_agent = 2;
  string ip = 3;
  string last_ip = 4;
  google.protobuf.Timestamp last_used_at = 5;
  google.protobuf.Timestamp created_at = 6;
  bool active = 7;
  bool current = 8;
}

message Group {
  int64 id = 1;
  string name = 2;
  string description = 3;
}

// ---------- HelloWorld

service HelloWorld {
  rpc Hello(HelloReq) returns (HelloResp);
}

message HelloReq {
  string subject = 1;
  google.protobuf.Timestamp current_time = 2;
}

message HelloResp {
  string text = 1;
  google.protobuf.Timestamp current_time = 2;
}

// ---------- Auth

service Auth {
  rpc SignUp(AuthSignUpReq) returns (AuthSignUpResp);
  rpc Forgot(AuthForgotReq) returns (AuthForgotResp);
}

message AuthSignUpReq {
  string email = 1;
  string username = 2;
  string password = 3;
}

message AuthSignUpResp {}

message AuthForgotReq {
  string email = 1;
}

message AuthForgotResp {}

// ---------- Page

service Page {
  rpc Home(PageHomeReq) returns (PageHomeResp);
  rpc Profile(PageProfileReq) returns (PageProfileResp);
}

message PageHomeReq {}

message PageHomeResp {
  int64 device_count = 1;
}

message PageProfileReq {}

message PageProfileResp {
  string username = 1;
  string email = 2;
  bool admin = 3;
  google.protobuf.Timestamp created_at = 4;
  google.protobuf.Timestamp updated_at = 5;
  repeated Session sessions = 6;
}

// ---------- User

service User {
  rpc UpdateUsername(UserUpdateUsernameReq) returns (UserUpdateUsernameResp);
  rpc UpdatePassword(UserUpdatePasswordReq) returns (UserUpdatePasswordResp);
  rpc RevokeSession(UserRevokeSessionReq) returns (UserRevokeSessionResp);
  rpc RevokeAllSessions(UserRevokeAllSessionsReq) returns (UserRevokeAllSessionsResp);
  rpc ListGroup(UserListGroupReq) returns (UserListGroupResp);
  rpc GetMe(UserGetMeReq) returns (UserGetMeResp);
}

message UserUpdateUsernameReq {
  string new_username = 1;
}

message UserUpdateUsernameResp {}

message UserUpdatePasswordReq {
  string old_password = 1;
  string new_password = 2;
}

message UserUpdatePasswordResp {}

message UserRevokeSessionReq {
  int64 session_id = 1;
}

message UserRevokeSessionResp {}

message UserRevokeAllSessionsReq {}

message UserRevokeAllSessionsResp {}

message UserListGroupReq {}

message UserListGroupResp {
  repeated Group groups = 1;
}

message UserGetMeReq {}

message UserGetMeResp {
  string username = 1;
  bool admin = 2;
}
