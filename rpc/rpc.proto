syntax = "proto3";

import "google/protobuf/timestamp.proto";

option go_package = "../rpc";
option optimize_for = CODE_SIZE;

message Session {
  int64 id = 1;
  string user_agent = 2;
  string ip = 3;
  string last_ip = 4;
  google.protobuf.Timestamp last_used_at_time = 5;
  google.protobuf.Timestamp created_at_time = 6;
  bool active = 7;
  bool current = 8;
}

message Group {
  int64 id = 1;
  string name = 2;
  string description = 3;
  google.protobuf.Timestamp joined_at_time = 4;
}

// ---------- HelloWorld

service HelloWorld {
  rpc Hello(HelloReq) returns (HelloResp);
}

message HelloReq {
  string subject = 1;
  google.protobuf.Timestamp current_time = 2;
}

message HelloResp {
  string text = 1;
  google.protobuf.Timestamp current_time = 2;
}

// ---------- Auth

service Auth {
  rpc SignUp(SignUpReq) returns (SignUpResp);
  rpc ForgotPassword(ForgotPasswordReq) returns (ForgotPasswordResp);
}

message SignUpReq {
  string email = 1;
  string username = 2;
  string password = 3;
}

message SignUpResp {}

message ForgotPasswordReq {
  string email = 1;
}

message ForgotPasswordResp {}

// ---------- Page

service Page {
  rpc Home(PageHomeReq) returns (PageHomeResp);
  rpc Profile(PageProfileReq) returns (PageProfileResp);
}

message PageHomeReq {}

message PageHomeResp {
  int64 device_count = 1;
}

message PageProfileReq {}

message PageProfileResp {
  string username = 1;
  string email = 2;
  bool admin = 3;
  google.protobuf.Timestamp created_at_time = 4;
  google.protobuf.Timestamp updated_at_time = 5;
  repeated Session sessions = 6;
}

// ---------- User

service User {
  rpc UpdateUsername(UpdateUsernameReq) returns (UpdateUsernameResp);
  rpc UpdatePassword(UpdatePasswordReq) returns (UpdatePasswordResp);
  rpc RevokeSession(RevokeSessionReq) returns (RevokeSessionResp);
  rpc RevokeAllSessions(RevokeAllSessionsReq) returns (RevokeAllSessionsResp);
  rpc ListMyGroups(ListMyGroupsReq) returns (ListMyGroupsResp);
}

message UpdateUsernameReq {
  string new_username = 1;
}

message UpdateUsernameResp {}

message UpdatePasswordReq {
  string old_password = 1;
  string new_password = 2;
}

message UpdatePasswordResp {}

message RevokeSessionReq {
  int64 session_id = 1;
}

message RevokeSessionResp {}

message RevokeAllSessionsReq {}

message RevokeAllSessionsResp {}

message ListMyGroupsReq {}

message ListMyGroupsResp {
  repeated Group groups = 1;
}

// ---------- Admin

service Admin {
  rpc ListGroups(ListGroupsReq) returns (ListGroupsResp);
}

message ListGroupsReq {
  int32 page = 1;
  int32 per_page = 2;
}

message ListGroupsResp {
  repeated Group groups = 1;
  int32 page = 2;
  int32 per_page = 3;
  int64 total_pages = 4;
  int64 total_items = 5;
}
