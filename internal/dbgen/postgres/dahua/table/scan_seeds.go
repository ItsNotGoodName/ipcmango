//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var ScanSeeds = newScanSeedsTable("dahua", "scan_seeds", "")

type scanSeedsTable struct {
	postgres.Table

	// Columns
	Seed     postgres.ColumnInteger
	CameraID postgres.ColumnInteger

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type ScanSeedsTable struct {
	scanSeedsTable

	EXCLUDED scanSeedsTable
}

// AS creates new ScanSeedsTable with assigned alias
func (a ScanSeedsTable) AS(alias string) *ScanSeedsTable {
	return newScanSeedsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new ScanSeedsTable with assigned schema name
func (a ScanSeedsTable) FromSchema(schemaName string) *ScanSeedsTable {
	return newScanSeedsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new ScanSeedsTable with assigned table prefix
func (a ScanSeedsTable) WithPrefix(prefix string) *ScanSeedsTable {
	return newScanSeedsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new ScanSeedsTable with assigned table suffix
func (a ScanSeedsTable) WithSuffix(suffix string) *ScanSeedsTable {
	return newScanSeedsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newScanSeedsTable(schemaName, tableName, alias string) *ScanSeedsTable {
	return &ScanSeedsTable{
		scanSeedsTable: newScanSeedsTableImpl(schemaName, tableName, alias),
		EXCLUDED:       newScanSeedsTableImpl("", "excluded", ""),
	}
}

func newScanSeedsTableImpl(schemaName, tableName, alias string) scanSeedsTable {
	var (
		SeedColumn     = postgres.IntegerColumn("seed")
		CameraIDColumn = postgres.IntegerColumn("camera_id")
		allColumns     = postgres.ColumnList{SeedColumn, CameraIDColumn}
		mutableColumns = postgres.ColumnList{SeedColumn, CameraIDColumn}
	)

	return scanSeedsTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		Seed:     SeedColumn,
		CameraID: CameraIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
