// Code generated by go-enum DO NOT EDIT.
// Version:
// Revision:
// Build Date:
// Built By:

package dahua

import (
	"errors"
	"fmt"
)

const (
	// FileScanCommandQuick is a FileScanCommand of type quick.
	FileScanCommandQuick FileScanCommand = "quick"
	// FileScanCommandFull is a FileScanCommand of type full.
	FileScanCommandFull FileScanCommand = "full"
	// FileScanCommandManual is a FileScanCommand of type manual.
	FileScanCommandManual FileScanCommand = "manual"
)

var ErrInvalidFileScanCommand = errors.New("not a valid FileScanCommand")

// String implements the Stringer interface.
func (x FileScanCommand) String() string {
	return string(x)
}

// IsValid provides a quick way to determine if the typed value is
// part of the allowed enumerated values
func (x FileScanCommand) IsValid() bool {
	_, err := ParseFileScanCommand(string(x))
	return err == nil
}

var _FileScanCommandValue = map[string]FileScanCommand{
	"quick":  FileScanCommandQuick,
	"full":   FileScanCommandFull,
	"manual": FileScanCommandManual,
}

// ParseFileScanCommand attempts to convert a string to a FileScanCommand.
func ParseFileScanCommand(name string) (FileScanCommand, error) {
	if x, ok := _FileScanCommandValue[name]; ok {
		return x, nil
	}
	return FileScanCommand(""), fmt.Errorf("%s is %w", name, ErrInvalidFileScanCommand)
}
