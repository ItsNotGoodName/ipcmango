{
  "components": {
    "schemas": {
      "Build": {
        "additionalProperties": false,
        "properties": {
          "commit": {
            "type": "string"
          },
          "commit_url": {
            "type": "string"
          },
          "date": {
            "format": "date-time",
            "type": "string"
          },
          "license_url": {
            "type": "string"
          },
          "release_url": {
            "type": "string"
          },
          "repo_url": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateDevice": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "https://example.com/schemas/CreateDevice.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "features": {
            "items": {
              "enum": [
                "camera"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "ip": {
            "format": "ipv4",
            "type": "string"
          },
          "latitude": {
            "format": "double",
            "type": "number"
          },
          "location": {
            "examples": [
              "UTC"
            ],
            "type": "string"
          },
          "longitude": {
            "format": "double",
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "sunrise_offset": {
            "examples": [
              "0s"
            ],
            "type": "string"
          },
          "sunset_offset": {
            "examples": [
              "0s"
            ],
            "type": "string"
          },
          "sync_video_in_mode": {
            "type": "boolean"
          },
          "username": {
            "type": "string"
          },
          "uuid": {
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateEmailEndpoint": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "https://example.com/schemas/CreateEmailEndpoint.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "attachments": {
            "type": "boolean"
          },
          "body_template": {
            "type": "string"
          },
          "device_uuids": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "disabled": {
            "default": false,
            "type": "boolean"
          },
          "expression": {
            "type": "string"
          },
          "global": {
            "type": "boolean"
          },
          "title_template": {
            "type": "string"
          },
          "urls": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "uuid": {
            "format": "uuid",
            "type": "string"
          }
        },
        "required": [
          "urls"
        ],
        "type": "object"
      },
      "CreateStorageDestination": {
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "port": {
            "format": "int64",
            "type": "integer"
          },
          "remote_directory": {
            "type": "string"
          },
          "server_address": {
            "type": "string"
          },
          "storage": {
            "enum": [
              "sftp",
              "ftp"
            ],
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "uuid": {
            "format": "uuid",
            "type": "string"
          }
        },
        "required": [
          "name",
          "storage",
          "server_address",
          "port",
          "username",
          "password",
          "remote_directory"
        ],
        "type": "object"
      },
      "Device": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "https://example.com/schemas/Device.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "features": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "ip": {
            "format": "ipv4",
            "type": "string"
          },
          "latitude": {
            "format": "double",
            "type": [
              "number",
              "null"
            ]
          },
          "location": {
            "examples": [
              "UTC"
            ],
            "type": "string"
          },
          "longitude": {
            "format": "double",
            "type": [
              "number",
              "null"
            ]
          },
          "name": {
            "type": "string"
          },
          "sunrise_offset": {
            "examples": [
              "0s"
            ],
            "type": "string"
          },
          "sunset_offset": {
            "examples": [
              "0s"
            ],
            "type": "string"
          },
          "sync_video_in_mode": {
            "type": [
              "boolean",
              "null"
            ]
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          }
        },
        "required": [
          "uuid",
          "name",
          "ip",
          "username",
          "location",
          "features",
          "email",
          "created_at",
          "updated_at",
          "latitude",
          "longitude",
          "sunrise_offset",
          "sunset_offset",
          "sync_video_in_mode"
        ],
        "type": "object"
      },
      "DeviceActiveUser": {
        "additionalProperties": false,
        "properties": {
          "client_address": {
            "type": "string"
          },
          "client_type": {
            "type": "string"
          },
          "group": {
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "login_time": {
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "client_address",
          "client_type",
          "group",
          "id",
          "login_time",
          "name"
        ],
        "type": "object"
      },
      "DeviceCoaxialCaps": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "https://example.com/schemas/DeviceCoaxialCaps.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "support_control_fullcolor_light": {
            "type": "boolean"
          },
          "support_control_light": {
            "type": "boolean"
          },
          "support_control_speaker": {
            "type": "boolean"
          }
        },
        "required": [
          "support_control_fullcolor_light",
          "support_control_light",
          "support_control_speaker"
        ],
        "type": "object"
      },
      "DeviceCoaxialStatus": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "https://example.com/schemas/DeviceCoaxialStatus.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "speaker": {
            "type": "boolean"
          },
          "white_light": {
            "type": "boolean"
          }
        },
        "required": [
          "white_light",
          "speaker"
        ],
        "type": "object"
      },
      "DeviceDetail": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "https://example.com/schemas/DeviceDetail.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "algorithm_version": {
            "type": "string"
          },
          "device_class": {
            "type": "string"
          },
          "device_type": {
            "type": "string"
          },
          "hardware_version": {
            "type": "string"
          },
          "market_area": {
            "type": "string"
          },
          "onvif_version": {
            "type": "string"
          },
          "process_info": {
            "type": "string"
          },
          "sn": {
            "type": "string"
          },
          "vendor": {
            "type": "string"
          }
        },
        "required": [
          "sn",
          "device_class",
          "device_type",
          "hardware_version",
          "market_area",
          "process_info",
          "vendor",
          "onvif_version",
          "algorithm_version"
        ],
        "type": "object"
      },
      "DeviceEventsOutput": {
        "additionalProperties": false,
        "properties": {
          "action": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "data": {},
          "device_uuid": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "index": {
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "id",
          "device_uuid",
          "code",
          "action",
          "index",
          "data",
          "created_at"
        ],
        "type": "object"
      },
      "DeviceGroup": {
        "additionalProperties": false,
        "properties": {
          "authority_list": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "memo": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "authority_list",
          "id",
          "memo",
          "name"
        ],
        "type": "object"
      },
      "DeviceLicense": {
        "additionalProperties": false,
        "properties": {
          "abroad_info": {
            "type": "string"
          },
          "all_type": {
            "type": "boolean"
          },
          "digit_channel": {
            "format": "int64",
            "type": "integer"
          },
          "effective_days": {
            "format": "int64",
            "type": "integer"
          },
          "effective_time": {
            "format": "date-time",
            "type": "string"
          },
          "license_id": {
            "format": "int64",
            "type": "integer"
          },
          "product_type": {
            "type": "string"
          },
          "status": {
            "format": "int64",
            "type": "integer"
          },
          "username": {
            "type": "string"
          }
        },
        "required": [
          "abroad_info",
          "all_type",
          "digit_channel",
          "effective_days",
          "effective_time",
          "license_id",
          "product_type",
          "status",
          "username"
        ],
        "type": "object"
      },
      "DevicePTZPreset": {
        "additionalProperties": false,
        "properties": {
          "index": {
            "format": "int64",
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "index",
          "name"
        ],
        "type": "object"
      },
      "DeviceSoftwareVersion": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "https://example.com/schemas/DeviceSoftwareVersion.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "build": {
            "type": "string"
          },
          "build_date": {
            "type": "string"
          },
          "security_base_line_version": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "web_version": {
            "type": "string"
          }
        },
        "required": [
          "build",
          "build_date",
          "security_base_line_version",
          "version",
          "web_version"
        ],
        "type": "object"
      },
      "DeviceStatus": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "https://example.com/schemas/DeviceStatus.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "error": {
            "type": "string"
          },
          "last_login": {
            "format": "date-time",
            "type": "string"
          },
          "state": {
            "type": "string"
          }
        },
        "required": [
          "error",
          "state",
          "last_login"
        ],
        "type": "object"
      },
      "DeviceStorage": {
        "additionalProperties": false,
        "properties": {
          "is_error": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "total_bytes": {
            "format": "int64",
            "type": "integer"
          },
          "type": {
            "type": "string"
          },
          "used_bytes": {
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "name",
          "state",
          "path",
          "type",
          "total_bytes",
          "used_bytes",
          "is_error"
        ],
        "type": "object"
      },
      "DeviceUptime": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "https://example.com/schemas/DeviceUptime.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "last": {
            "format": "date-time",
            "type": "string"
          },
          "supported": {
            "type": "boolean"
          },
          "total": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "last",
          "total",
          "supported"
        ],
        "type": "object"
      },
      "DeviceUser": {
        "additionalProperties": false,
        "properties": {
          "anonymous": {
            "type": "boolean"
          },
          "authority_list": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "group": {
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "memo": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "password_modified_time": {
            "format": "date-time",
            "type": "string"
          },
          "pwd_score": {
            "format": "int64",
            "type": "integer"
          },
          "reserved": {
            "type": "boolean"
          },
          "sharable": {
            "type": "boolean"
          }
        },
        "required": [
          "anonymous",
          "authority_list",
          "group",
          "id",
          "memo",
          "name",
          "password",
          "password_modified_time",
          "pwd_score",
          "reserved",
          "sharable"
        ],
        "type": "object"
      },
      "DeviceVideoInMode": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "https://example.com/schemas/DeviceVideoInMode.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "switch_mode": {
            "type": "string"
          },
          "time_section": {
            "type": "string"
          }
        },
        "required": [
          "switch_mode",
          "time_section"
        ],
        "type": "object"
      },
      "DeviceVideoInModeSync": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "https://example.com/schemas/DeviceVideoInModeSync.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "latitude": {
            "format": "double",
            "type": "number"
          },
          "location": {
            "examples": [
              "UTC"
            ],
            "type": "string"
          },
          "longitude": {
            "format": "double",
            "type": "number"
          },
          "sunrise_offset": {
            "examples": [
              "0s"
            ],
            "type": "string"
          },
          "sunset_offset": {
            "examples": [
              "0s"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "EmailEndpoint": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "https://example.com/schemas/EmailEndpoint.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "attachments": {
            "type": "boolean"
          },
          "body_template": {
            "type": "string"
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "device_uuids": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "disabled": {
            "type": "boolean"
          },
          "expression": {
            "type": "string"
          },
          "global": {
            "type": "boolean"
          },
          "title_template": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          },
          "urls": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "uuid": {
            "type": "string"
          }
        },
        "required": [
          "uuid",
          "global",
          "device_uuids",
          "expression",
          "urls",
          "title_template",
          "body_template",
          "attachments",
          "created_at",
          "updated_at",
          "disabled"
        ],
        "type": "object"
      },
      "ErrorDetail": {
        "additionalProperties": false,
        "properties": {
          "location": {
            "description": "Where the error occurred, e.g. 'body.items[3].tags' or 'path.thing-id'",
            "type": "string"
          },
          "message": {
            "description": "Error message text",
            "type": "string"
          },
          "value": {
            "description": "The value at the given location"
          }
        },
        "type": "object"
      },
      "ErrorModel": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "https://example.com/schemas/ErrorModel.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "detail": {
            "description": "A human-readable explanation specific to this occurrence of the problem.",
            "examples": [
              "Property foo is required but is missing."
            ],
            "type": "string"
          },
          "errors": {
            "description": "Optional list of individual error details",
            "items": {
              "$ref": "#/components/schemas/ErrorDetail"
            },
            "type": "array"
          },
          "instance": {
            "description": "A URI reference that identifies the specific occurrence of the problem.",
            "examples": [
              "https://example.com/error-log/abc123"
            ],
            "format": "uri",
            "type": "string"
          },
          "status": {
            "description": "HTTP status code",
            "examples": [
              400
            ],
            "format": "int64",
            "type": "integer"
          },
          "title": {
            "description": "A short, human-readable summary of the problem type. This value should not change between occurrences of the error.",
            "examples": [
              "Bad Request"
            ],
            "type": "string"
          },
          "type": {
            "default": "about:blank",
            "description": "A URI reference to human-readable documentation for the error.",
            "examples": [
              "https://example.com/errors/example"
            ],
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "FileScanCursor": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "https://example.com/schemas/FileScanCursor.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "full_complete": {
            "type": "boolean"
          },
          "full_cursor": {
            "format": "date-time",
            "type": "string"
          },
          "full_epoch": {
            "format": "date-time",
            "type": "string"
          },
          "quick_cursor": {
            "format": "date-time",
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "quick_cursor",
          "full_cursor",
          "full_epoch",
          "full_complete",
          "updated_at"
        ],
        "type": "object"
      },
      "GetHomePage": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "https://example.com/schemas/GetHomePage.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "build": {
            "$ref": "#/components/schemas/Build"
          },
          "db_usage": {
            "format": "int64",
            "type": "integer"
          },
          "device_count": {
            "format": "int64",
            "type": "integer"
          },
          "email_count": {
            "format": "int64",
            "type": "integer"
          },
          "event_count": {
            "format": "int64",
            "type": "integer"
          },
          "file_count": {
            "format": "int64",
            "type": "integer"
          },
          "file_usage": {
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "device_count",
          "event_count",
          "email_count",
          "file_count",
          "db_usage",
          "file_usage",
          "build"
        ],
        "type": "object"
      },
      "ManualFileScan": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "https://example.com/schemas/ManualFileScan.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "end_time": {
            "format": "date-time",
            "type": "string"
          },
          "start_time": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PatchSettings": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "https://example.com/schemas/PatchSettings.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "latitude": {
            "format": "double",
            "type": "number"
          },
          "location": {
            "examples": [
              "UTC"
            ],
            "type": "string"
          },
          "longitude": {
            "format": "double",
            "type": "number"
          },
          "sunrise_offset": {
            "examples": [
              "0s"
            ],
            "type": "string"
          },
          "sunset_offset": {
            "examples": [
              "0s"
            ],
            "type": "string"
          },
          "sync_video_in_mode": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ScanResult": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "https://example.com/schemas/ScanResult.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "created_count": {
            "format": "int64",
            "type": "integer"
          },
          "deleted_count": {
            "format": "int64",
            "type": "integer"
          },
          "updated_count": {
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "created_count",
          "updated_count",
          "deleted_count"
        ],
        "type": "object"
      },
      "Settings": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "https://example.com/schemas/Settings.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "latitude": {
            "format": "double",
            "type": "number"
          },
          "location": {
            "examples": [
              "UTC"
            ],
            "type": "string"
          },
          "longitude": {
            "format": "double",
            "type": "number"
          },
          "sunrise_offset": {
            "examples": [
              "0s"
            ],
            "type": "string"
          },
          "sunset_offset": {
            "examples": [
              "0s"
            ],
            "type": "string"
          },
          "sync_video_in_mode": {
            "type": "boolean"
          }
        },
        "required": [
          "location",
          "latitude",
          "longitude",
          "sunrise_offset",
          "sunset_offset",
          "sync_video_in_mode"
        ],
        "type": "object"
      },
      "StorageDestination": {
        "additionalProperties": false,
        "properties": {
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "port": {
            "format": "int64",
            "type": "integer"
          },
          "remote_directory": {
            "type": "string"
          },
          "server_address": {
            "type": "string"
          },
          "storage": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          }
        },
        "required": [
          "uuid",
          "name",
          "storage",
          "server_address",
          "port",
          "username",
          "password",
          "remote_directory",
          "created_at",
          "updated_at"
        ],
        "type": "object"
      },
      "UpdateDevice": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "https://example.com/schemas/UpdateDevice.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "features": {
            "items": {
              "enum": [
                "camera"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "ip": {
            "format": "ipv4",
            "type": "string"
          },
          "latitude": {
            "format": "double",
            "type": [
              "number",
              "null"
            ]
          },
          "location": {
            "examples": [
              "UTC"
            ],
            "type": "string"
          },
          "longitude": {
            "format": "double",
            "type": [
              "number",
              "null"
            ]
          },
          "name": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "sunrise_offset": {
            "examples": [
              "0s"
            ],
            "type": "string"
          },
          "sunset_offset": {
            "examples": [
              "0s"
            ],
            "type": "string"
          },
          "sync_video_in_mode": {
            "type": "boolean"
          },
          "username": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "ip",
          "username",
          "latitude",
          "longitude"
        ],
        "type": "object"
      },
      "UpdateEmailEndpoint": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "https://example.com/schemas/UpdateEmailEndpoint.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "attachments": {
            "type": "boolean"
          },
          "body_template": {
            "type": "string"
          },
          "device_uuids": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "disabled": {
            "default": false,
            "type": "boolean"
          },
          "expression": {
            "type": "string"
          },
          "global": {
            "type": "boolean"
          },
          "title_template": {
            "type": "string"
          },
          "urls": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "urls"
        ],
        "type": "object"
      },
      "UpdateSettings": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "https://example.com/schemas/UpdateSettings.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "latitude": {
            "format": "double",
            "type": "number"
          },
          "location": {
            "examples": [
              "UTC"
            ],
            "type": "string"
          },
          "longitude": {
            "format": "double",
            "type": "number"
          },
          "sunrise_offset": {
            "examples": [
              "0s"
            ],
            "type": "string"
          },
          "sunset_offset": {
            "examples": [
              "0s"
            ],
            "type": "string"
          },
          "sync_video_in_mode": {
            "type": "boolean"
          }
        },
        "required": [
          "location",
          "latitude",
          "longitude",
          "sunrise_offset",
          "sunset_offset",
          "sync_video_in_mode"
        ],
        "type": "object"
      }
    }
  },
  "info": {
    "title": "IPCManView API",
    "version": "1.0.0"
  },
  "openapi": "3.1.0",
  "paths": {
    "/api/devices": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Device"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "List devices"
      },
      "put": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/CreateDevice"
                },
                "type": "array"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Device"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Put devices"
      }
    },
    "/api/devices/create": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDevice"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Device"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Create device"
      }
    },
    "/api/devices/{uuid}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Delete device"
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Device"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Get device"
      },
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDevice"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Device"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Update device"
      }
    },
    "/api/devices/{uuid}/coaxial/caps": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "channel",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceCoaxialCaps"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Get device coaxial caps"
      }
    },
    "/api/devices/{uuid}/coaxial/speaker": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "channel",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "action",
            "schema": {
              "enum": [
                "on",
                "off",
                "toggle"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Set device speaker state"
      }
    },
    "/api/devices/{uuid}/coaxial/status": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "channel",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceCoaxialStatus"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Get device coaxial status"
      }
    },
    "/api/devices/{uuid}/coaxial/white-light": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "channel",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "action",
            "schema": {
              "enum": [
                "on",
                "off",
                "toggle"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Set device white light state"
      }
    },
    "/api/devices/{uuid}/detail": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceDetail"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Get device detail"
      }
    },
    "/api/devices/{uuid}/file": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/octet-stream": {},
              "image/jpeg": {}
            },
            "description": "File from camera"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Download device file"
      }
    },
    "/api/devices/{uuid}/groups": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DeviceGroup"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "List device groups"
      }
    },
    "/api/devices/{uuid}/licenses": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DeviceLicense"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Get device licenses"
      }
    },
    "/api/devices/{uuid}/ptz/presets": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "channel",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DevicePTZPreset"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "List device ptz presets"
      }
    },
    "/api/devices/{uuid}/reboot": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Reboot device"
      }
    },
    "/api/devices/{uuid}/scan/cursor": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileScanCursor"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Reset device file scan cursor"
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileScanCursor"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Get file scan cursor"
      }
    },
    "/api/devices/{uuid}/scan/full": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScanResult"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Full scan device files"
      }
    },
    "/api/devices/{uuid}/scan/manual": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManualFileScan"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScanResult"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Manual scan device files"
      }
    },
    "/api/devices/{uuid}/scan/quick": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScanResult"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Quick scan device files"
      }
    },
    "/api/devices/{uuid}/snapshot": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "channel",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "type",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "image/jpeg": {}
            },
            "description": "Current snapshot of camera"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Get device snapshot"
      }
    },
    "/api/devices/{uuid}/software": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceSoftwareVersion"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Get device software versions"
      }
    },
    "/api/devices/{uuid}/status": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceStatus"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Get device status"
      }
    },
    "/api/devices/{uuid}/storage": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DeviceStorage"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "List device storage"
      }
    },
    "/api/devices/{uuid}/uptime": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceUptime"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Get device uptime"
      }
    },
    "/api/devices/{uuid}/users": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DeviceUser"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "List device users"
      }
    },
    "/api/devices/{uuid}/users/active": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DeviceActiveUser"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "List device active users"
      }
    },
    "/api/devices/{uuid}/video-in-mode": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceVideoInMode"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Get device VideoInMode"
      }
    },
    "/api/devices/{uuid}/video-in-mode/sync": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceVideoInModeSync"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceVideoInMode"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Sync device VideoInMode"
      }
    },
    "/api/email-endpoints": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EmailEndpoint"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "List email endpoints"
      },
      "put": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/CreateEmailEndpoint"
                },
                "type": "array"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EmailEndpoint"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Put email endpoints"
      }
    },
    "/api/email-endpoints/create": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEmailEndpoint"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailEndpoint"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Create email endpoint"
      }
    },
    "/api/endpoints/{uuid}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Delete endpoint"
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailEndpoint"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Get email endpoint"
      },
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEmailEndpoint"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailEndpoint"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Update email endpoint"
      }
    },
    "/api/event-actions": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "List event actions"
      }
    },
    "/api/event-codes": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "List event codes"
      }
    },
    "/api/events": {
      "get": {
        "parameters": [
          {
            "explode": false,
            "in": "query",
            "name": "device",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "codes",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "actions",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "text/event-stream": {
                "schema": {
                  "description": "Each oneOf object in the array represents one possible Server Sent Events (SSE) message, serialized as UTF-8 text according to the SSE specification.",
                  "items": {
                    "oneOf": [
                      {
                        "properties": {
                          "data": {
                            "$ref": "#/components/schemas/DeviceEventsOutput"
                          },
                          "event": {
                            "const": "message",
                            "description": "The event name.",
                            "type": "string"
                          },
                          "id": {
                            "description": "The event ID.",
                            "type": "integer"
                          },
                          "retry": {
                            "description": "The retry time in milliseconds.",
                            "type": "integer"
                          }
                        },
                        "required": [
                          "data"
                        ],
                        "title": "Event message",
                        "type": "object"
                      }
                    ]
                  },
                  "title": "Server Sent Events",
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Listen for events"
      }
    },
    "/api/locations": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "List locations"
      }
    },
    "/api/pages/home": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHomePage"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Get home page"
      }
    },
    "/api/settings": {
      "delete": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Settings"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Default settings"
      },
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Settings"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Get settings"
      },
      "patch": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchSettings"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Settings"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Patch settings"
      },
      "put": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSettings"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Settings"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Update settings"
      }
    },
    "/api/storage-destinations": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/StorageDestination"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "List storage destinations"
      },
      "put": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/CreateStorageDestination"
                },
                "type": "array"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/StorageDestination"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Put storage destinations"
      }
    }
  }
}
